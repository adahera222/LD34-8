<!DOCTYPE HTML>
<!DOCTYPE HTML>
<html>
  <head>
    <script type="text/javascript" src = "js/game.js"></script>
    <script type="text/javascript" src = "js/math2D.js"></script>
    <script type="text/javascript" src = "js/drawing.js"></script>
    <script type="text/javascript" src = "js/colors.js"></script>
    <script type="text/javascript" src = "js/utility.js"></script>
    <script type="text/javascript" src = "js/mouse.js"></script>
    <script type="text/javascript" src = "js/keyboard.js"></script>
    <script type="text/javascript" src = "js/gameobject.js"></script>
    <script type="text/javascript" src = "js/levels.js"></script>
    <title>New Game</title>
  </head>
  
  <body>
    <canvas id="game_canvas" style="border:1px solid black; position: absolute; left:0; top:0;"></canvas>
  </body>
  
  
  <script type="text/javascript" src="tracks.js"></script>
  <script type="text/javascript" src="trains.js"></script>
  
  
  <script type="text/javascript">
    // The game
    var game = new Game({bg_color:'#0a492c'});
    game.setTitle("Loops of Fate");
    game.setSize(xy(800, 600));
    game.center = xy(400, 300);
    enableLevels(game);
    window.onload = function() {
      game.bringToFront('circular');
      game.bringToFront('train');
      game.bringToFront('clicker');
      game.start();
    }
    
    game.bringToFront = function(type) {
      // loop backwards so we don't skip items
      for (var i = this.objects.length - 1; i >= 0; i--) {
        if (!this.objects[i].type || this.objects[i].type !== type) continue;
        this.objects.push(this.objects.splice(i, 1)[0]);
      }
    }
    
    game.setAllJoints = function(setting) {
      for (var i = 0; i < this.tracks.length; i++) {
        if (this.tracks[i].type !== 'circular') continue;
        for (var linear_track in this.tracks[i].connections) {
          this.tracks[i].connections[linear_track] = setting;
        }
        
      }
    }
    
    
    game.next_track = 0;
    game.tracks = [];
    
    // Temporary button to move to next level
    var next_level = new GameObject(game);
    next_level.p1 = xy(30, 50);
    next_level.p2 = xy(120, 70),
    next_level.draw = function() {
      rect(this.ctx, this.p1, this.p2, 'black');
      game.setFont(game.display.font_small);
      text(this.ctx, "Skip to next level", this.p1, "nw");
    }
    next_level.contains = function(pos) { return isBetweenCoords(pos, this.p1, this.p2) }
    next_level.onclick = function() { console.log('next level!'); game.doNextLevel(); }
    
    
    // Button to restart level
    var restart_level = new GameObject(game);
    restart_level.p1 = xy(30, 80);
    restart_level.p2 = xy(120, 100),
    restart_level.draw = function() {
      rect(this.ctx, this.p1, this.p2, 'black');
      game.setFont(game.display.font_small);
      text(this.ctx, "Restart level", this.p1, "nw");
    }
    restart_level.contains = function(pos) { return isBetweenCoords(pos, this.p1, this.p2) }
    restart_level.onclick = function() { game.startCurrentLevel(); }
    
    // Button to restart game
    var restart_game = new GameObject(game);
    restart_game.p1 = xy(30, 110);
    restart_game.p2 = xy(120, 130),
    restart_game.draw = function() {
      rect(this.ctx, this.p1, this.p2, 'black');
      game.setFont(game.display.font_small);
      text(this.ctx, "Restart game", this.p1, "nw");
    }
    restart_game.contains = function(pos) { return isBetweenCoords(pos, this.p1, this.p2) }
    restart_game.onclick = function() { game.restart(); }
    
    // Player-driven train possibilities
    game.train1 = makeTrain('red', null);
    game.train2 = makeTrain('blue', null);
    game.train3 = makeTrain('yellow', null);
    
    game.train1.is_player = true;
    game.train2.is_player = true;
    game.train3.is_player = true;
    
    // Reference to the player's chosen train
    game.player_train = null;
    game.player_has_chosen_train = false;
    
    game.choosePlayerTrain = function(train) {
      if (this.player_has_chosen_train) return; // only choose the first one that gets chosen
      this.player_train = train;
      this.player_has_chosen_train = true;
    }
    game.resetPlayerTrain = function(train) { // Call this when resetting the game
      this.player_train = null;
      this.player_has_chosen_train = false;
    }
    
    
    // ========== SETTINGS
    // Display constants
    game.display.track_width = 8; // px
    game.display.track_color = 'white';
    game.display.train_radius = 12; // px
    game.display.darkened_track_extent = 0.4;
    
    game.display.font_title = {size: 48, type: 'Arial'}
    game.display.font_large = {size: 36, type: 'Arial'}
    game.display.font_normal = {size: 24, type: 'Arial'}
    game.display.font_small = {size: 12, type: 'Arial'}
    
    game.ctx.fillStyle = 'white'; // default foreground color
    game.ctx.strokeStyle = 'white';
    
    // Other constants
    game.train_speed = 3; // pixels per frame. TODO: convert to pixels per second
    game.joint_click_radius = 20; // radius of area in which you can click the joining of two tracks
    
    
    // ========== GAME STAGES
    game.titlescreen = function() {
      clear(this.ctx);
      this.setFont(this.display.font_title);
      text(this.ctx, this.title, xy(400, 200), "centered");
      this.setFont(this.display.font_normal);
      setTimeout(function() { game.doNextLevel(); game.stage = game.gameplay; game.next(); }, 1*1000);
    }
    game.gameplay = function() {
      clear(this.ctx);
      if (this.isKeyPressed("L")) {}
      iter(this.objects, function(obj) { obj.tick(); });
      iter(this.objects, function(obj) { obj.draw(); });
      this.next();
    }
    
    
    game.stage = game.titlescreen; // default stages
    
    game.restart = function() {
      this.current_level = 0;
      game.stage = game.titlescreen;
    }
    game.startCurrentLevel = function() {
      this.levels[this.current_level].onload();
    }
    
  </script>
  
  <script type="text/javascript" src="levels/start.js"></script>
  <script type="text/javascript" src="levels/level1.js"></script>
  
  
  <script type="text/javascript" src="levels/level2.js"></script>
  <script type="text/javascript" src="levels/level3.js"></script>
  <script type="text/javascript" src="levels/level4.js"></script>
  
  <script type="text/javascript" src="levels/level5.js"></script>
  <script type="text/javascript" src="levels/level6.js"></script>
  <script type="text/javascript" src="levels/level7.js"></script>
  <script type="text/javascript" src="levels/level8.js"></script>
  <script type="text/javascript" src="levels/level9.js"></script>
  <script type="text/javascript" src="levels/level10.js"></script>
  
</html>
